services:
  backend:
    build: .
    restart: always
    volumes:
      - .:/app
    environment:
      FLASK_ENV: development
      FLASK_APP: run.py
      FLASK_DB_TYPE: postgres
      FLASK_DB_USER: postgres
      FLASK_DB_NAME: postgres
      FLASK_DB_PASSWORD: secretpass
      FLASK_DB_HOST: db
      FLASK_DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 3

  db:
    image: postgres:13
    container_name: guess_game_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secretpass
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data

  nginx:
    image: nginx:alpine
    container_name: guess_game_nginx
    ports:
      - "5000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_BACKEND_URL=http://localhost:5000
    restart: always
    container_name: guess_game_frontend
    environment:
      - NODE_ENV=production
    ports:
      - "80:80"

volumes:
  db_data:
